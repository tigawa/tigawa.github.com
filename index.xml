<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>For myself tomorrow</title><link>https://www.igawa.blog/</link><description>Recent content on For myself tomorrow</description><generator>Hugo -- gohugo.io</generator><language>ja</language><lastBuildDate>Tue, 27 Dec 2022 23:57:01 +0900</lastBuildDate><atom:link href="https://www.igawa.blog/index.xml" rel="self" type="application/rss+xml"/><item><title>文字列フォーマットの世界</title><link>https://www.igawa.blog/golang/string/</link><pubDate>Tue, 27 Dec 2022 23:57:01 +0900</pubDate><guid>https://www.igawa.blog/golang/string/</guid><description>&lt;p>&lt;code>%#v&lt;/code>を指定すると構造体の型名、フィールド名、値をわかりやすく表示します。&lt;/p>
&lt;pre>&lt;code> f := &amp;amp;Foo{Bar: 1, Baz: &amp;quot;Hello, W+D Press!&amp;quot;}
fmt.Printf(&amp;quot;%#v \n&amp;quot;, f)
// =&amp;gt; &amp;amp;main.Foo{Bar:1, Baz:&amp;quot;Hello, W+D Press!&amp;quot;}
&lt;/code>&lt;/pre>&lt;p>&lt;code>%v&lt;/code>を指定すると構造体の値のみを表示します。&lt;/p>
&lt;pre>&lt;code> f := &amp;amp;Foo{Bar: 1, Baz: &amp;quot;Hello, W+D Press!&amp;quot;}
fmt.Printf(&amp;quot;%v \n&amp;quot;, f)
// =&amp;gt; &amp;amp;{1 Hello, W+D Press!}
&lt;/code>&lt;/pre></description></item><item><title/><link>https://www.igawa.blog/cheat/shortcut/</link><pubDate>Sun, 21 Mar 2021 22:52:40 +0900</pubDate><guid>https://www.igawa.blog/cheat/shortcut/</guid><description>mac 説明 キー 録画 ⌘ + ⇧ + 5 Desktop 切替 ⌃ + ← or → Desktop 表示 Fn + F11 vscode IntelliJ Mac の装飾キー</description></item><item><title>Lambdaまとめ</title><link>https://www.igawa.blog/aws/lambda%E3%81%BE%E3%81%A8%E3%82%81/</link><pubDate>Sun, 21 Mar 2021 11:54:43 +0900</pubDate><guid>https://www.igawa.blog/aws/lambda%E3%81%BE%E3%81%A8%E3%82%81/</guid><description>&lt;dl>
&lt;dt>Lambda について、&lt;a href="https://docs.aws.amazon.com/ja_jp/lambda/latest/dg/welcome.html">aws のドキュメント&lt;/a>で気になるところの引用及びリンクをまとめます。&lt;/dt>
&lt;dd>definition&lt;/dd>
&lt;/dl></description></item><item><title>RDSでデータ破壊をCloudWatchで監視する</title><link>https://www.igawa.blog/aws/rds%E3%81%A7%E3%83%87%E3%83%BC%E3%82%BF%E7%A0%B4%E5%A3%8A%E3%82%92cloudwatch%E3%81%A7%E7%9B%A3%E8%A6%96%E3%81%99%E3%82%8B/</link><pubDate>Sat, 20 Mar 2021 22:50:48 +0900</pubDate><guid>https://www.igawa.blog/aws/rds%E3%81%A7%E3%83%87%E3%83%BC%E3%82%BF%E7%A0%B4%E5%A3%8A%E3%82%92cloudwatch%E3%81%A7%E7%9B%A3%E8%A6%96%E3%81%99%E3%82%8B/</guid><description>&lt;h2 id="参考">参考&lt;/h2>
&lt;p>&lt;a href="https://qiita.com/ukitiyan/items/bdd25946bbbf7a70903e">https://qiita.com/ukitiyan/items/bdd25946bbbf7a70903e&lt;/a>&lt;/p></description></item><item><title>Vscodeのプラグインおすすめ</title><link>https://www.igawa.blog/til/vscode%E3%81%AE%E3%83%97%E3%83%A9%E3%82%B0%E3%82%A4%E3%83%B3%E3%81%8A%E3%81%99%E3%81%99%E3%82%81/</link><pubDate>Sat, 20 Mar 2021 12:10:00 +0900</pubDate><guid>https://www.igawa.blog/til/vscode%E3%81%AE%E3%83%97%E3%83%A9%E3%82%B0%E3%82%A4%E3%83%B3%E3%81%8A%E3%81%99%E3%81%99%E3%82%81/</guid><description> ここのサイトがすごく参考になる</description></item><item><title>SCRUM_BOOT_CAMP 増補改訂版 を読んで</title><link>https://www.igawa.blog/til/scrum_boot_camp-%E5%A2%97%E8%A3%9C%E6%94%B9%E8%A8%82%E7%89%88-%E3%82%92%E8%AA%AD%E3%82%93%E3%81%A7/</link><pubDate>Thu, 04 Jun 2020 08:35:36 +0900</pubDate><guid>https://www.igawa.blog/til/scrum_boot_camp-%E5%A2%97%E8%A3%9C%E6%94%B9%E8%A8%82%E7%89%88-%E3%82%92%E8%AA%AD%E3%82%93%E3%81%A7/</guid><description>&lt;p>SCRUM_BOOT_CAMP 増補改訂版 を読んで思ったことを列挙します。&lt;/p></description></item><item><title>特定のフォルダにファイルをコピーして開くサンプル</title><link>https://www.igawa.blog/til/win_copy_and_start/</link><pubDate>Thu, 04 Jun 2020 08:35:36 +0900</pubDate><guid>https://www.igawa.blog/til/win_copy_and_start/</guid><description>@echo off setlocal set cached_folder=%userprofile%\cached_delete_ok\ set dst_file=&amp;quot;%cached_folder%%~n1%~x1&amp;quot; set src_file=%1 if not exist %cached_folder% mkdir %cached_folder% copy /Y %src_file% %dst_file% start &amp;quot;hoge&amp;quot; %dst_file% endlocal ちょっとはまったところ ファイル名に空白を含むと正しく起動しない。 解決方法 start &amp;quot;hoge&amp;quot;のようにhogeを付けて回避する。</description></item><item><title>sam local cheat sheet</title><link>https://www.igawa.blog/til/sam_local_cheat_sheet/</link><pubDate>Sat, 08 Feb 2020 14:57:32 +0900</pubDate><guid>https://www.igawa.blog/til/sam_local_cheat_sheet/</guid><description>初期設定 sam init &amp;ndash;runtime nodejs12.x npm install 初回 sam build sam deploy &amp;ndash;guided ちゃんとパラメータの入力を求めている。
２回目以降 sam deploy ライブラリを追加する場合 cd node のプロジェクトに移動 npm i xxxxx -S aws cloudformation stack local に対してはこちらを実行するイメージかな
検証 aws cloudformation validate-template &amp;ndash;template-body file://template.yaml
deploy aws cloudformation deploy &amp;ndash;template-file template.yaml &amp;ndash;stack-name my-new-stack &amp;ndash;parameter-overrides UploadS3BucketName=knowhouse.upload
スタックの削除 aws cloudformation delete-stack &amp;ndash;stack-name my-new-stack4
スタックの一括削除 aws cloudformation list-stacks | jq -r .StackSummaries[].StackName | xargs -L 1 aws cloudformation delete-stack &amp;ndash;stack-name localstackに対しても正しく動作できた。 ここから、S3 Uploadの続きをやるべし！</description></item><item><title>Promiseをthenでつなげて、Promiseを呼び出す方法</title><link>https://www.igawa.blog/til/promise_then_promise/</link><pubDate>Sat, 08 Feb 2020 14:41:51 +0900</pubDate><guid>https://www.igawa.blog/til/promise_then_promise/</guid><description>function putObjectToS3(key, data) { return new Promise((resolve, reject) =&amp;gt; { var params = { Bucket: bucket, Key: key, Body: data } console.log('p11') s3.putObject(params, function (err, data) { if (err) { reject(err); } else { console.log('p11') resolve(data); } }); }).then((data) =&amp;gt; new Promise(function (resolve, reject) { var params = { Bucket: bucket }; s3.getBucketLocation(params, function (err, data) { if (err) console.log(err, err.stack); // an error occurred let location = data.LocationConstraint; console.log(location, data); let link = util.</description></item><item><title>BAT雛形</title><link>https://www.igawa.blog/til/bat%E9%9B%9B%E5%BD%A2/</link><pubDate>Wed, 27 Nov 2019 08:07:30 +0900</pubDate><guid>https://www.igawa.blog/til/bat%E9%9B%9B%E5%BD%A2/</guid><description>コード setlocal @echo off CD /D &amp;quot;%~dp0&amp;quot; endlocal 補足説明 @は、そこコマンド自体をECHOしないための設定 ECHO OFF だけだと ECHO OFFがOFFする前だからコンソールに出力される。 そのため＠ECHOにして防いでいる。</description></item><item><title>Hugoのserverコマンドでブラウザも同時に起動する方法</title><link>https://www.igawa.blog/til/hugo%E3%82%92server%E3%81%A7%E3%83%96%E3%83%A9%E3%82%A6%E3%82%B6%E3%82%82%E5%90%8C%E6%99%82%E3%81%AB%E8%B5%B7%E5%8B%95%E3%81%99%E3%82%8B%E6%96%B9%E6%B3%95/</link><pubDate>Sun, 06 Oct 2019 13:46:38 +0900</pubDate><guid>https://www.igawa.blog/til/hugo%E3%82%92server%E3%81%A7%E3%83%96%E3%83%A9%E3%82%A6%E3%82%B6%E3%82%82%E5%90%8C%E6%99%82%E3%81%AB%E8%B5%B7%E5%8B%95%E3%81%99%E3%82%8B%E6%96%B9%E6%B3%95/</guid><description>&lt;p>Hugoのserverコマンドでブラウザも同時に起動する方法を紹介します。&lt;/p></description></item><item><title>ps時にGrep自身のプロセスを非表示にする方法</title><link>https://www.igawa.blog/til/grep%E8%87%AA%E5%88%86%E8%87%AA%E8%BA%AB%E3%81%AE%E3%83%97%E3%83%AD%E3%82%BB%E3%82%B9%E3%82%92%E8%A1%A8%E7%A4%BA%E3%81%AB%E3%81%99%E3%82%8B%E6%96%B9%E6%B3%95/</link><pubDate>Sun, 06 Oct 2019 12:33:55 +0900</pubDate><guid>https://www.igawa.blog/til/grep%E8%87%AA%E5%88%86%E8%87%AA%E8%BA%AB%E3%81%AE%E3%83%97%E3%83%AD%E3%82%BB%E3%82%B9%E3%82%92%E8%A1%A8%E7%A4%BA%E3%81%AB%E3%81%99%E3%82%8B%E6%96%B9%E6%B3%95/</guid><description>ps | grep hugo | grep -v grep ps | grep [h]ugo 指定した名前のプロセスをkillするsh #!/bin/bash ps | grep $1 | grep -v grep | awk '{print $1}' | xargs kill 以上</description></item><item><title>シェルスクリプト雛形</title><link>https://www.igawa.blog/til/sh%E9%9B%9B%E5%BD%A2/</link><pubDate>Sun, 06 Oct 2019 10:18:07 +0900</pubDate><guid>https://www.igawa.blog/til/sh%E9%9B%9B%E5%BD%A2/</guid><description>&lt;p>今後徐々に足して行きます。&lt;/p></description></item><item><title>演算子のオーバーロード</title><link>https://www.igawa.blog/c-sharp/%E6%BC%94%E7%AE%97%E5%AD%90%E3%81%AE%E3%82%AA%E3%83%BC%E3%83%90%E3%83%BC%E3%83%AD%E3%83%BC%E3%83%89/</link><pubDate>Sat, 28 Sep 2019 15:33:45 +0900</pubDate><guid>https://www.igawa.blog/c-sharp/%E6%BC%94%E7%AE%97%E5%AD%90%E3%81%AE%E3%82%AA%E3%83%BC%E3%83%90%E3%83%BC%E3%83%AD%E3%83%BC%E3%83%89/</guid><description>&lt;p>&lt;code>operator&lt;/code> キーワードを使うと演算子をオーバーロードして自分で定義することができます。&lt;/p></description></item><item><title>可変長引数</title><link>https://www.igawa.blog/c-sharp/%E5%8F%AF%E5%A4%89%E9%95%B7%E5%BC%95%E6%95%B0/</link><pubDate>Sat, 28 Sep 2019 11:44:43 +0900</pubDate><guid>https://www.igawa.blog/c-sharp/%E5%8F%AF%E5%A4%89%E9%95%B7%E5%BC%95%E6%95%B0/</guid><description>&lt;p>C#の可変長引数は、params 修飾子をつけます。&lt;/p></description></item><item><title>VS Codeの矩形選択のショートカットキー</title><link>https://www.igawa.blog/til/%E7%9F%A9%E5%BD%A2%E9%81%B8%E6%8A%9E/</link><pubDate>Sat, 07 Sep 2019 12:09:09 +0900</pubDate><guid>https://www.igawa.blog/til/%E7%9F%A9%E5%BD%A2%E9%81%B8%E6%8A%9E/</guid><description>&lt;p>VSCodeの矩形選択のショートカットキーは次になります。&lt;/p>
&lt;h3 id="macのショートカット">MACのショートカット&lt;/h3>
&lt;pre>&lt;code>［Shift］＋［Option］＋［Command］＋矢印キー
&lt;/code>&lt;/pre></description></item><item><title>mainメソッド</title><link>https://www.igawa.blog/c-sharp/main_method/</link><pubDate>Sat, 07 Sep 2019 12:04:41 +0900</pubDate><guid>https://www.igawa.blog/c-sharp/main_method/</guid><description>&lt;p>mainメソッドの4つのオーバロード&lt;/p></description></item><item><title>静的クラスと静的コンストラクタ</title><link>https://www.igawa.blog/c-sharp/static_class/</link><pubDate>Sat, 07 Sep 2019 11:43:30 +0900</pubDate><guid>https://www.igawa.blog/c-sharp/static_class/</guid><description>&lt;p>静的クラスと静的コンストラクタについてまとめます。&lt;/p></description></item><item><title>Dictionaryを継承してgetしたときに該当データがない場合は、TValueで指定されたクラスをnewして返す方法</title><link>https://www.igawa.blog/c-sharp/tec1/</link><pubDate>Sat, 31 Aug 2019 12:11:56 +0900</pubDate><guid>https://www.igawa.blog/c-sharp/tec1/</guid><description>&lt;p>Dictionaryを継承してgetしたときに該当データがない場合は、TValueで指定されたクラスをnewして返す方法を紹介します。&lt;/p>
&lt;h3 id="ポイント">ポイント&lt;/h3>
&lt;ul>
&lt;li>アクセサをオーバライドする。&lt;/li>
&lt;li>TValueをwhereで限定することで、メソッド内で new TValue()を可能にできる。 (これはJavaではできない。いいところ！)&lt;/li>
&lt;/ul></description></item><item><title>参照パラメータと出力パラメータ</title><link>https://www.igawa.blog/c-sharp/ref_out/</link><pubDate>Thu, 15 Aug 2019 13:07:09 +0900</pubDate><guid>https://www.igawa.blog/c-sharp/ref_out/</guid><description>参照パラメータ ref をつけると結果を呼び出し側に返すことができる。
使い方 int a = 0; Console.WriteLine(a); obj.Sqr(ref a); Console.WriteLine(a); public void Sqr(ref int i) { i = i * i; } 制限事項 ref を宣言するとnullを設定することはできない
出力パラーメタ out をつけると結果を呼び出し側に返すことができる。
使い方 bool isSquare; int a = RectInfo(30, 30, out isSquare); public int RectInfo(int side1, int side2, out bool isSquare) { if(side1==side2) isSquare = true; else isSquare = false; return side1 * side2; } 制限事項 out を指定した引数には必ず値を設定しないと行けない。 設定しないとコンパイルエラーになる。</description></item><item><title>文字列</title><link>https://www.igawa.blog/c-sharp/string/</link><pubDate>Thu, 15 Aug 2019 12:28:01 +0900</pubDate><guid>https://www.igawa.blog/c-sharp/string/</guid><description>&lt;p>よくつかう文字列に関する部品をJavaとC#で対比してまとめます。&lt;/p></description></item><item><title>C#</title><link>https://www.igawa.blog/c-sharp/archives/</link><pubDate>Thu, 15 Aug 2019 11:56:10 +0900</pubDate><guid>https://www.igawa.blog/c-sharp/archives/</guid><description>過去の記事を全てみる
ざっとC#の歴史
基本1 基本2 応用 文字列 mainメソッド インデクサー ref out 可変長引数 静的コンストラクタ 演算子のオーバーロード 命名規約 種類 Java C#(.NET) クラス Pascal Pascal インタフェース Pascal &amp;ldquo;I&amp;rdquo; + Pascal パッケージ / ネームスペース Camel Pascal メソッド Camel Pascal ローカル変数 Camel Camel メンバ変数 Came Pascal 定数 Snake Pascal 列挙定数 Snake Snake</description></item><item><title>ディレクトリ配下のファイルの文字コード一括置換する</title><link>https://www.igawa.blog/til/%E3%83%87%E3%82%A3%E3%83%AC%E3%82%AF%E3%83%88%E3%83%AA%E9%85%8D%E4%B8%8B%E3%81%AE%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E3%81%AE%E6%96%87%E5%AD%97%E3%82%B3%E3%83%BC%E3%83%89%E4%B8%80%E6%8B%AC%E7%BD%AE%E6%8F%9B%E3%81%99%E3%82%8B/</link><pubDate>Mon, 29 Jul 2019 06:19:20 +0900</pubDate><guid>https://www.igawa.blog/til/%E3%83%87%E3%82%A3%E3%83%AC%E3%82%AF%E3%83%88%E3%83%AA%E9%85%8D%E4%B8%8B%E3%81%AE%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E3%81%AE%E6%96%87%E5%AD%97%E3%82%B3%E3%83%BC%E3%83%89%E4%B8%80%E6%8B%AC%E7%BD%AE%E6%8F%9B%E3%81%99%E3%82%8B/</guid><description>find . -name '*.cs' -type f | xargs -L 1 nkf -u --overwrite -w</description></item><item><title>scikit-learn algorithm cheat-sheet の歩き方</title><link>https://www.igawa.blog/ml/scikit-learn-algorithm-cheat-sheet/</link><pubDate>Sun, 10 Mar 2019 23:30:00 +0900</pubDate><guid>https://www.igawa.blog/ml/scikit-learn-algorithm-cheat-sheet/</guid><description>&lt;p>scikit-learn algorithm cheat-sheet をどのように使えばよいか整理しました。&lt;/p>
&lt;p>機械学習には色々な特性のモデルがあり、algorithm cheat-sheetはどのモデルを使用すればよか導いてくれるものです。&lt;/p>
&lt;p>若干意味がわからないところもありましたが、ざっと翻訳して吹き出しをつけました。&lt;/p></description></item><item><title>ざっとC#の歴史</title><link>https://www.igawa.blog/c-sharp/first/</link><pubDate>Wed, 30 Jan 2019 23:58:19 +0900</pubDate><guid>https://www.igawa.blog/c-sharp/first/</guid><description>&lt;p>C#について、勉強したことを自分のために少しづつまとめていきます。&lt;/p></description></item><item><title>NumPyチートシート</title><link>https://www.igawa.blog/ml/numpy-cheat/</link><pubDate>Sun, 27 Jan 2019 14:19:12 +0900</pubDate><guid>https://www.igawa.blog/ml/numpy-cheat/</guid><description>NumPy 行列の生成 基本 &amp;ldquo;1&amp;quot;要素の配列 Y = np.ones([5,3]) print(Y) [[ 1. 1. 1.] [ 1. 1. 1.] [ 1. 1. 1.] [ 1. 1. 1.] [ 1. 1. 1.]] 基本 &amp;ldquo;0&amp;quot;要素の配列 Y = np.zeros([5,3]) print(Y) [[ 0. 0. 0.] [ 0. 0. 0.] [ 0. 0. 0.] [ 0. 0. 0.] [ 0. 0. 0.]] 基本 配列指定 X = np.array([[1,1,1], [2,2,2]]) print(X) [[1 1 1] [2 2 2]] 基本 範囲指定 X = np.</description></item><item><title>jerseyの紹介</title><link>https://www.igawa.blog/blog/2018/03/04/jersey/</link><pubDate>Sun, 04 Mar 2018 14:37:06 +0900</pubDate><guid>https://www.igawa.blog/blog/2018/03/04/jersey/</guid><description>&lt;p>jersey(ジャージー)について紹介します。&lt;/p>
&lt;p>jerseyとは、 Sun による JAX-RS のリファレンス実装です。
つまりは、JAX-RS という、RESTful APIを作るのに特化した仕様があり、それをSunが実装したものです。&lt;/p>
&lt;p>jersey以外にも、JAX-RS実装はいくつかあります。&lt;/p></description></item><item><title>breakpoint</title><link>https://www.igawa.blog/blog/2017/06/19/breakpoint/</link><pubDate>Mon, 19 Jun 2017 00:51:55 +0900</pubDate><guid>https://www.igawa.blog/blog/2017/06/19/breakpoint/</guid><description>&lt;p>よくみるブレークポイント、ブラウザ&lt;/p></description></item><item><title>CSS プロパティの順序の統一</title><link>https://www.igawa.blog/blog/2017/06/17/css-properties-sequence/</link><pubDate>Sat, 17 Jun 2017 19:11:00 +0900</pubDate><guid>https://www.igawa.blog/blog/2017/06/17/css-properties-sequence/</guid><description>&lt;p>CSS プロパティの順序の統一するのは大変ですが、ツールを使って統一することができます。&lt;/p>
&lt;p>&lt;a href="http://csscomb.com/">CSScomb&lt;/a>というツールを紹介します。&lt;/p></description></item><item><title>CSS設計</title><link>https://www.igawa.blog/blog/2017/06/17/css-design/</link><pubDate>Sat, 17 Jun 2017 19:09:08 +0900</pubDate><guid>https://www.igawa.blog/blog/2017/06/17/css-design/</guid><description>&lt;p>CSSの設計について、簡単にまとめています。&lt;/p></description></item><item><title>中央寄せのレイアウト</title><link>https://www.igawa.blog/blog/2017/06/11/layout-center-2-button/</link><pubDate>Sun, 11 Jun 2017 00:00:00 +0000</pubDate><guid>https://www.igawa.blog/blog/2017/06/11/layout-center-2-button/</guid><description>&lt;p>このように全体を中央寄せにしたいが、一番下のボタンは左寄せにするやり方を紹介します。&lt;a href="https://www.igawa.blog/html/layout-center-2-button.html">デモ&lt;/a>&lt;/p>
&lt;p>&lt;img src="https://www.igawa.blog/images/layout-center-2-button.png" alt="完成イメージ">&lt;/p></description></item><item><title>Reactのコーディング規約で、特に気を付けたいと思ったこと！</title><link>https://www.igawa.blog/blog/2017/03/07/codestyle/</link><pubDate>Tue, 07 Mar 2017 00:00:00 +0000</pubDate><guid>https://www.igawa.blog/blog/2017/03/07/codestyle/</guid><description>&lt;p>&lt;a href="http://qiita.com/koukun/items/e64762e407b8dd5e0247">[翻訳] Airbnb React/JSX Style Guide&lt;/a>を読んで、特に気をつけたいと思ったことを、自分のためのメモです。&lt;/p></description></item><item><title>pandasで特定の項目を編集する方法</title><link>https://www.igawa.blog/ml/pandas_lambda/</link><pubDate>Fri, 23 Dec 2016 00:00:00 +0000</pubDate><guid>https://www.igawa.blog/ml/pandas_lambda/</guid><description>&lt;p>pandasで特定の項目を編集する方法を紹介します。&lt;/p></description></item><item><title>pythonの正規表現</title><link>https://www.igawa.blog/blog/2016/11/06/re/</link><pubDate>Sun, 06 Nov 2016 00:00:00 +0000</pubDate><guid>https://www.igawa.blog/blog/2016/11/06/re/</guid><description>&lt;p>pythonの正規表現について整理します。&lt;/p></description></item><item><title>pythonのクラス</title><link>https://www.igawa.blog/blog/2016/11/05/class/</link><pubDate>Sat, 05 Nov 2016 00:00:00 +0000</pubDate><guid>https://www.igawa.blog/blog/2016/11/05/class/</guid><description>&lt;p>pythonのクラスについて&lt;/p></description></item><item><title>itertoolsライブラリについて</title><link>https://www.igawa.blog/blog/2016/08/07/itertools/</link><pubDate>Sun, 07 Aug 2016 00:00:00 +0000</pubDate><guid>https://www.igawa.blog/blog/2016/08/07/itertools/</guid><description>&lt;p>pyhonの標準ライブラリである。&lt;code>itertools&lt;/code>について紹介です。&lt;/p>
&lt;p>&lt;a href="http://docs.python.jp/2/library/itertools.html#module-itertools">公式ドキュメント&lt;/a>&lt;/p></description></item><item><title>bootstrapを使わずにレイアウトを組む</title><link>https://www.igawa.blog/blog/2016/08/06/layout/</link><pubDate>Sat, 06 Aug 2016 00:00:00 +0000</pubDate><guid>https://www.igawa.blog/blog/2016/08/06/layout/</guid><description>&lt;p>bootstrapを使わずにレイアウトを組んだので紹介します。&lt;/p>
&lt;p>&lt;strong>javascriptは一切使用しません。&lt;/strong> 全て &lt;strong>css&lt;/strong> のみで作成します。&lt;/p>
&lt;p>完成イメージ&lt;/p>
&lt;p>&lt;a href="https://www.igawa.blog/html/table-cell.html">デモ&lt;/a>&lt;/p>
&lt;p>&lt;img src="https://www.igawa.blog/banners/layout.png" alt="完成イメージ">&lt;/p></description></item><item><title>collectionsライブラリについて</title><link>https://www.igawa.blog/blog/2016/08/06/collections/</link><pubDate>Sat, 06 Aug 2016 00:00:00 +0000</pubDate><guid>https://www.igawa.blog/blog/2016/08/06/collections/</guid><description>&lt;p>pyhonの標準ライブラリである。&lt;code>collections&lt;/code>について紹介です。&lt;/p>
&lt;p>&lt;a href="http://docs.python.jp/2/library/collections.html">公式ドキュメント&lt;/a>&lt;/p></description></item><item><title>pythonのジェネレータについて</title><link>https://www.igawa.blog/blog/2016/07/31/generator/</link><pubDate>Sun, 31 Jul 2016 00:00:00 +0000</pubDate><guid>https://www.igawa.blog/blog/2016/07/31/generator/</guid><description>&lt;p>pythonのジェネレータについて、紹介します。&lt;/p></description></item><item><title>pythonのデコレータについて</title><link>https://www.igawa.blog/blog/2016/07/31/decorator/</link><pubDate>Sun, 31 Jul 2016 00:00:00 +0000</pubDate><guid>https://www.igawa.blog/blog/2016/07/31/decorator/</guid><description>&lt;p>pythonのデコレータについて紹介します。&lt;/p></description></item><item><title>pyhoneの引数について</title><link>https://www.igawa.blog/blog/2016/07/30/args/</link><pubDate>Sat, 30 Jul 2016 00:00:00 +0000</pubDate><guid>https://www.igawa.blog/blog/2016/07/30/args/</guid><description>&lt;p>pythonの引数について説明します。&lt;/p></description></item><item><title>pythonでクロージャ・ラムダ関数</title><link>https://www.igawa.blog/blog/2016/07/30/closure_lambda/</link><pubDate>Sat, 30 Jul 2016 00:00:00 +0000</pubDate><guid>https://www.igawa.blog/blog/2016/07/30/closure_lambda/</guid><description>&lt;p>pythonでクロージャ・ラムダ関数について勉強しました。&lt;/p></description></item><item><title>pythonのNoneについて</title><link>https://www.igawa.blog/blog/2016/07/30/none/</link><pubDate>Sat, 30 Jul 2016 00:00:00 +0000</pubDate><guid>https://www.igawa.blog/blog/2016/07/30/none/</guid><description>&lt;p>pythonのNoneについて紹介します。&lt;/p></description></item><item><title>pythonのpass文について</title><link>https://www.igawa.blog/blog/2016/07/30/path/</link><pubDate>Sat, 30 Jul 2016 00:00:00 +0000</pubDate><guid>https://www.igawa.blog/blog/2016/07/30/path/</guid><description>&lt;p>pythonのpass文について、ピンとこなかったのでまとめました。&lt;/p></description></item><item><title>pythonのインタプリタの終了</title><link>https://www.igawa.blog/blog/2016/07/30/interpreter/</link><pubDate>Sat, 30 Jul 2016 00:00:00 +0000</pubDate><guid>https://www.igawa.blog/blog/2016/07/30/interpreter/</guid><description>&lt;p>インタプリタの終了の仕方を紹介します。&lt;/p></description></item><item><title>pythonのパッケージについて</title><link>https://www.igawa.blog/blog/2016/07/30/package/</link><pubDate>Sat, 30 Jul 2016 00:00:00 +0000</pubDate><guid>https://www.igawa.blog/blog/2016/07/30/package/</guid><description>&lt;p>pythonのpackageの考えかたは、基本Javaと同じだと思いました。&lt;/p>
&lt;p>フォルダ階層で、パッケージの階層を表現します。&lt;/p></description></item><item><title>ファブラボとっとりwest(西部)に行ってきました！！</title><link>https://www.igawa.blog/blog/2016/07/25/fablab/</link><pubDate>Mon, 25 Jul 2016 00:00:00 +0000</pubDate><guid>https://www.igawa.blog/blog/2016/07/25/fablab/</guid><description>&lt;p>社内研修で、ファブラボとっとりwest(西部)に行ってきました！！&lt;/p></description></item><item><title>JPAで特定の項目だけ更新する方法</title><link>https://www.igawa.blog/blog/2016/07/21/jpa_update/</link><pubDate>Thu, 21 Jul 2016 00:00:00 +0000</pubDate><guid>https://www.igawa.blog/blog/2016/07/21/jpa_update/</guid><description>&lt;p>JPAで特定の項目だけ更新する方法を紹介します。&lt;/p></description></item><item><title>pandasで性別を数値に変更する方法</title><link>https://www.igawa.blog/ml/pandas_map/</link><pubDate>Mon, 18 Jul 2016 00:00:00 +0000</pubDate><guid>https://www.igawa.blog/ml/pandas_map/</guid><description>&lt;p>pandasで性別コードを数値に変更する方法を紹介します。&lt;/p>
&lt;p>機械学習するためには、全て数値(float)に変換する必要があります。&lt;/p>
&lt;p>性別も同じです。&lt;/p></description></item><item><title>pandasでindexを設定する方法</title><link>https://www.igawa.blog/ml/unique/</link><pubDate>Sun, 17 Jul 2016 00:00:00 +0000</pubDate><guid>https://www.igawa.blog/ml/unique/</guid><description>&lt;p>pandasでindexを設定する方法を紹介します。&lt;/p>
&lt;p>indexに指定する値は、ユニークである必要があります。&lt;/p></description></item><item><title>pandasで特定の条件に一致する行の、特定の項目を更新する方法</title><link>https://www.igawa.blog/ml/loc/</link><pubDate>Sun, 17 Jul 2016 00:00:00 +0000</pubDate><guid>https://www.igawa.blog/ml/loc/</guid><description>&lt;p>pandasで特定の条件に一致する行の、特定の項目を更新する方法を紹介します。&lt;/p>
&lt;p>データから特徴点を抽出して加工するさいに多様すると思います。&lt;/p></description></item><item><title>子育て ✕ 試行錯誤</title><link>https://www.igawa.blog/blog/2016/07/17/try_and_error/</link><pubDate>Sun, 17 Jul 2016 00:00:00 +0000</pubDate><guid>https://www.igawa.blog/blog/2016/07/17/try_and_error/</guid><description>&lt;p>子育てって大変ですよね。&lt;/p>
&lt;p>我が家も長男が小学１年生になり、試行錯誤しながら子育てに奮闘中です。&lt;/p>
&lt;p>嫁と２人で子育てについて試行錯誤していることを、載せていきます。&lt;/p>
&lt;p>今まで技術的なことばかり書いていましたが、ちょっとした息抜きです。&lt;/p></description></item><item><title>機械学習Bootcampに参加したときのメモ</title><link>https://www.igawa.blog/blog/2016/07/17/boot_camp/</link><pubDate>Sun, 17 Jul 2016 00:00:00 +0000</pubDate><guid>https://www.igawa.blog/blog/2016/07/17/boot_camp/</guid><description>&lt;p>2泊3日で機械学習を学ぶ合宿に参加してきました。
python、機械学習を全くしらないところから参加して
最後にはkaggleにチャレンジするところまで辿りつけました。&lt;/p>
&lt;p>講師の先生の話が大変わかりやすかったお陰です。本当にありがとうございました。&lt;/p>
&lt;p>ほとんど自分にしかわかりませんが、合宿中にメモしたことをUPします。&lt;/p></description></item><item><title>dataFrameから欠損値を削除</title><link>https://www.igawa.blog/ml/dropna/</link><pubDate>Sat, 16 Jul 2016 00:00:00 +0000</pubDate><guid>https://www.igawa.blog/ml/dropna/</guid><description>&lt;p>欠損値があると、機械学習する際にエラーになるため、何かしら値を埋める必要があります。&lt;/p>
&lt;p>ですが、とりあえず欠損値を覗いてくれるのがこれです。&lt;/p></description></item><item><title>pandasのチートシート</title><link>https://www.igawa.blog/ml/pandas_cheat/</link><pubDate>Sat, 16 Jul 2016 00:00:00 +0000</pubDate><guid>https://www.igawa.blog/ml/pandas_cheat/</guid><description>&lt;p>以下のサイトにpandasのチートシートがありました。
ありがとうございます。&lt;/p>
&lt;p>&lt;a href="http://www.analyticsvidhya.com/blog/2015/07/11-steps-perform-data-analysis-pandas-python/">http://www.analyticsvidhya.com/blog/2015/07/11-steps-perform-data-analysis-pandas-python/&lt;/a>&lt;/p></description></item><item><title>ピボットテーブルを棒グラフで表示する</title><link>https://www.igawa.blog/ml/plot_bar/</link><pubDate>Sat, 16 Jul 2016 02:00:00 +0900</pubDate><guid>https://www.igawa.blog/ml/plot_bar/</guid><description>&lt;p>&lt;a href="https://www.igawa.blog/ml/pivot2/">前回&lt;/a>ピボットテーブルで、割合を表示するテクニックを載せました。&lt;/p>
&lt;p>今回はその応用で、割合を棒グラフで表示する方法を紹介します。&lt;/p></description></item><item><title>pandasでピボットテーブルで割合を表示する。</title><link>https://www.igawa.blog/ml/pivot2/</link><pubDate>Sat, 16 Jul 2016 01:00:00 +0900</pubDate><guid>https://www.igawa.blog/ml/pivot2/</guid><description>&lt;p>&lt;a href="https://www.igawa.blog/ml/pivot/">前回&lt;/a>ピボットテーブルの表示の仕方を載せました。&lt;/p>
&lt;p>今回はその応用で、割合を表示したいと思います。&lt;/p></description></item><item><title>pandasでピボットテーブルを扱う</title><link>https://www.igawa.blog/ml/pivot/</link><pubDate>Sat, 16 Jul 2016 00:00:00 +0900</pubDate><guid>https://www.igawa.blog/ml/pivot/</guid><description>&lt;p>pandasでピボットテーブルを扱う方法を紹介します。&lt;/p>
&lt;p>今後、機械学習でデータを分析する際に多用しそうなのでメモします。&lt;/p>
&lt;p>イラストのパンダと&lt;code>pandas&lt;/code>は一切関係ありません！&lt;/p></description></item><item><title>bookmarks</title><link>https://www.igawa.blog/blog/2016/07/14/bookmark/</link><pubDate>Thu, 14 Jul 2016 00:00:00 +0000</pubDate><guid>https://www.igawa.blog/blog/2016/07/14/bookmark/</guid><description>&lt;p>個人的に、役に立つサイトをまとめています。&lt;/p></description></item><item><title>pythonの制御文</title><link>https://www.igawa.blog/blog/2016/07/03/code/</link><pubDate>Sun, 03 Jul 2016 00:00:00 +0000</pubDate><guid>https://www.igawa.blog/blog/2016/07/03/code/</guid><description>&lt;p>if文と、for文についてまとめます。&lt;/p></description></item><item><title>Pythonのリスト</title><link>https://www.igawa.blog/blog/2016/06/30/list/</link><pubDate>Thu, 30 Jun 2016 00:00:00 +0000</pubDate><guid>https://www.igawa.blog/blog/2016/06/30/list/</guid><description>&lt;p>リストは基本中の基本ですね。しっかり抑えておきたいところです。&lt;/p></description></item><item><title>Pythonの辞書を知る</title><link>https://www.igawa.blog/blog/2016/06/30/dict/</link><pubDate>Thu, 30 Jun 2016 00:00:00 +0000</pubDate><guid>https://www.igawa.blog/blog/2016/06/30/dict/</guid><description>&lt;p>基本中の基本ですね。しっかり抑えておきたいところです。&lt;/p></description></item><item><title>Pythonのタプル、集合</title><link>https://www.igawa.blog/blog/2016/06/27/tuple/</link><pubDate>Mon, 27 Jun 2016 00:00:00 +0000</pubDate><guid>https://www.igawa.blog/blog/2016/06/27/tuple/</guid><description>&lt;p>Pythonのタプル、集合について触れていきます。
特にタプルと集合は、Javaで扱ったことがなったので新鮮でした。そのあたりを中心にまとめます。&lt;/p></description></item><item><title>Python3に挑戦!!</title><link>https://www.igawa.blog/blog/2016/06/24/overview/</link><pubDate>Fri, 24 Jun 2016 00:00:00 +0000</pubDate><guid>https://www.igawa.blog/blog/2016/06/24/overview/</guid><description>&lt;p>機械学習などのライブラリなど揃っていることからPythonに興味が湧いてきました。今日からPythonの勉強を開始します。&lt;/p>
&lt;p>１人では続かないので、同僚と２人で喫茶店で読書会です。&lt;/p></description></item><item><title>機械学習</title><link>https://www.igawa.blog/ml/archives/</link><pubDate>Sat, 02 Jan 2016 00:00:00 +0000</pubDate><guid>https://www.igawa.blog/ml/archives/</guid><description>過去の記事を全てみる
基本1 基本2 応用 NumPy ピボットテーブル dataFrame 欠損値を削除 ピボットテーブル -&amp;gt; 割合 dataFrame 項目更新 ピボットテーブル -&amp;gt; 棒グラフ dataFrame indexの設定 ピボットテーブル -&amp;gt; 棒グラフ dataFrame 項目の編集(lambda) pandas チートシート pandasでよく使う文法まとめ</description></item><item><title>python</title><link>https://www.igawa.blog/blog/2016/01/01/archives/</link><pubDate>Fri, 01 Jan 2016 00:00:00 +0000</pubDate><guid>https://www.igawa.blog/blog/2016/01/01/archives/</guid><description>過去の記事を全てみる
基本1 基本2 応用 文字列、数値 クロージャ、ラムダ 正規表現 デレコータ 辞書 ジェネレータ リスト collections タプル、集合 itertools if文、for文 引数 None パッケージ class定義</description></item><item><title>SwiftからWKWebViewを触ってみる</title><link>https://www.igawa.blog/blog/2015/06/24/swift-wkwebview/</link><pubDate>Wed, 24 Jun 2015 00:00:00 +0000</pubDate><guid>https://www.igawa.blog/blog/2015/06/24/swift-wkwebview/</guid><description>&lt;p>以下のサンプルを解説します。 手探り状態なので、 わかっていることを徐々に追加していきます。&lt;/p></description></item><item><title>octopressでページ内リンクの作成</title><link>https://www.igawa.blog/blog/2014/06/22/octopress-inner-page-link/</link><pubDate>Sun, 22 Jun 2014 00:00:00 +0000</pubDate><guid>https://www.igawa.blog/blog/2014/06/22/octopress-inner-page-link/</guid><description>&lt;p>ページ内でリンクを使ってジャンプする方法を紹介します。&lt;/p></description></item><item><title>GoogleMapで任意の県に色をつける方法</title><link>https://www.igawa.blog/blog/2014/03/15/googlemap-shape/</link><pubDate>Sat, 15 Mar 2014 00:00:00 +0000</pubDate><guid>https://www.igawa.blog/blog/2014/03/15/googlemap-shape/</guid><description>&lt;p>意外と大変だったので紹介します。&lt;/p>
&lt;p>島根県を赤色で塗りつぶしました。&lt;br>
このブログ通りに進めれば、上記のイメージのようにできます。&lt;/p></description></item><item><title>SublimeText3でRubyをコーディングする際の最低限のインストール&amp;設定（Windows）</title><link>https://www.igawa.blog/blog/2014/03/09/st3-win-ruby/</link><pubDate>Sun, 09 Mar 2014 00:00:00 +0000</pubDate><guid>https://www.igawa.blog/blog/2014/03/09/st3-win-ruby/</guid><description>&lt;p>RubyからExcelを操作するコードを書きたかったので、WindowsマシーンにRubyの開発環境を用意しました。
せっかくなのでインストールした時のメモを残します。&lt;/p>
&lt;p>エディタは使いやすいSublimeText3をインストールする事にしました。
プラグインはRubyをコーディングする上で必要最小限のものを厳選しました。&lt;/p></description></item><item><title>GitからGUIなマージツールを起動してソースを比較し編集したい(ubuntu)</title><link>https://www.igawa.blog/blog/2014/02/20/difftool-ubuntu/</link><pubDate>Thu, 20 Feb 2014 00:00:00 +0000</pubDate><guid>https://www.igawa.blog/blog/2014/02/20/difftool-ubuntu/</guid><description>&lt;p>windowsでは、WinMargeを使って比較する方法を紹介しました。&lt;br>
ubuntuでは、&lt;strong>meld&lt;/strong>というマージツールで実現する方法を紹介します。&lt;/p>
&lt;p>&lt;a href="https://www.igawa.blog/blog/2014/02/12/difftool/index.html">windowsでは、WinMargeを使って比較する方法&lt;/a>&lt;/p></description></item><item><title>GitからWinMergeを起動してソースを比較し編集したい</title><link>https://www.igawa.blog/blog/2014/02/12/difftool/</link><pubDate>Wed, 12 Feb 2014 00:00:00 +0000</pubDate><guid>https://www.igawa.blog/blog/2014/02/12/difftool/</guid><description>&lt;p>CUIでソースの差分を比較するのは、結構つらいのでGUIで比較及び、そのまま編集ができないか調べたところあったので紹介します。&lt;br>
&lt;code>window&lt;/code>での設定手順と実行結果を解説します。&lt;/p></description></item><item><title>Ubuntuのログインパスワードを忘れた</title><link>https://www.igawa.blog/blog/2013/11/06/single-mode/</link><pubDate>Wed, 06 Nov 2013 00:00:00 +0000</pubDate><guid>https://www.igawa.blog/blog/2013/11/06/single-mode/</guid><description>&lt;p>ubuntuでrootのパスワードを忘れたらどうするか&lt;/p>
&lt;p>その解決方法を教えます。&lt;/p></description></item><item><title>chrome 拡張機能をリリースしました!!</title><link>https://www.igawa.blog/blog/2013/10/27/proofreading/</link><pubDate>Sun, 27 Oct 2013 00:00:00 +0000</pubDate><guid>https://www.igawa.blog/blog/2013/10/27/proofreading/</guid><description>&lt;p>その名も 「proofreading」 (プルーフリーディング)&lt;/p>
&lt;p>&lt;!-- raw HTML omitted --> &lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;/p>
&lt;p>あなたの書いた文章をチェックして、間違っているところを訂正します。&lt;/p>
&lt;p>Webでメール、facebook、twitter、ブログ等々で文章を書くときに役立ててください。&lt;/p></description></item><item><title>chrome拡張機能 > background.jsからcontentscript.jsにメッセージを送る方法</title><link>https://www.igawa.blog/blog/2013/10/13/chrome-extensions-message/</link><pubDate>Sun, 13 Oct 2013 00:00:00 +0000</pubDate><guid>https://www.igawa.blog/blog/2013/10/13/chrome-extensions-message/</guid><description>&lt;p>わかる人にはわかるbackground.jsからcontentscript.jsにメッセージを送る方法を紹介します。&lt;/p>
&lt;h3 id="簡単にやりたい事を説明します">簡単にやりたい事を説明します。&lt;/h3>
&lt;p>chromeの右クリックメニューを追加して、追加したメニューをクリックした時に、表示しているサイトのベースカラーを変更したい。&lt;/p>
&lt;ul>
&lt;li>右クリックメニューを拡張してメニューを追加する場合は、&lt;code>background.js&lt;/code>に処理を記載します。&lt;/li>
&lt;li>表示しているサイトに何か表示した場合は、&lt;code>contentscript.js&lt;/code>に処理を記載します。&lt;/li>
&lt;/ul>
&lt;p>background.jsから、contentscript.jsの関数は直接呼び出すことができません。その逆も同じです。&lt;/p>
&lt;p>じゃーどうすればいいのか?&lt;/p></description></item><item><title>Web API 導入の勘どころ</title><link>https://www.igawa.blog/blog/2013/10/09/webapi/</link><pubDate>Wed, 09 Oct 2013 00:00:00 +0000</pubDate><guid>https://www.igawa.blog/blog/2013/10/09/webapi/</guid><description>&lt;p>Web APIはクライアント側からAjaxで呼び出した方がいいの？&lt;/p>
&lt;p>それともサーバ側から呼び出した方がいいの？&lt;/p>
&lt;p>そんな素朴な疑問にお答えします。&lt;/p></description></item><item><title>SQL文で一時的にVIEWを使用する方法</title><link>https://www.igawa.blog/blog/2013/10/02/with-select/</link><pubDate>Wed, 02 Oct 2013 00:00:00 +0000</pubDate><guid>https://www.igawa.blog/blog/2013/10/02/with-select/</guid><description>&lt;p>調査用のSQLを作っている時に、１つのSQLで同じ副問い合わせを何箇所も書いていたので&lt;code>VIEW&lt;/code>を作ってすっきりさせたい衝動に駆られました。
ですが調査のために&lt;code>CREATE VIEW&lt;/code>はしたくなかったので、一時的にVIEWの代わりなるものがないかググったところありました。&lt;/p>
&lt;p>それが&lt;code>WITH句&lt;/code>です。&lt;/p></description></item><item><title>herokuにrailsアプリを配備する</title><link>https://www.igawa.blog/blog/2013/09/29/heroku/</link><pubDate>Sun, 29 Sep 2013 00:00:00 +0000</pubDate><guid>https://www.igawa.blog/blog/2013/09/29/heroku/</guid><description>&lt;p>railsアプリをherokuに配備する方法を紹介します。&lt;/p></description></item><item><title>linux サブディレクトリ配下のファイルをgrepする</title><link>https://www.igawa.blog/blog/2013/09/28/grep/</link><pubDate>Sat, 28 Sep 2013 00:00:00 +0000</pubDate><guid>https://www.igawa.blog/blog/2013/09/28/grep/</guid><description>&lt;p>サブディレクトリ配下のファイルをgrepする方法を紹介します。&lt;/p>
&lt;h1 id="コマンド書式">コマンド書式&lt;/h1>
&lt;pre>&lt;code>grep -r 検索文字列 ディレクトリ
&lt;/code>&lt;/pre></description></item><item><title>OpenShift railsのgenerateでエラー</title><link>https://www.igawa.blog/blog/2013/09/28/open-shift-rails/</link><pubDate>Sat, 28 Sep 2013 00:00:00 +0000</pubDate><guid>https://www.igawa.blog/blog/2013/09/28/open-shift-rails/</guid><description>&lt;p>OpenShiftでrailsプロジェクトを作成して、&lt;code>git clone&lt;/code>してローカルにプロジェクトを取り込み&lt;/p>
&lt;p>&lt;code>bundle install&lt;/code>して&lt;code>rails generate&lt;/code>コマンドを実行するとエラーになりました。&lt;/p>
&lt;p>なぜいきなり!!&lt;/p>
&lt;p>その時の回避方法をメモします。&lt;/p></description></item><item><title>railsの初歩 > lib配下に共通部品を定義する。</title><link>https://www.igawa.blog/blog/2013/09/28/rails-lib/</link><pubDate>Sat, 28 Sep 2013 00:00:00 +0000</pubDate><guid>https://www.igawa.blog/blog/2013/09/28/rails-lib/</guid><description>&lt;p>railsでlib配下に共通クラスを実装する方法を紹介します。&lt;/p></description></item><item><title>railsの初歩 > rspecのインストール</title><link>https://www.igawa.blog/blog/2013/09/28/rspce/</link><pubDate>Sat, 28 Sep 2013 00:00:00 +0000</pubDate><guid>https://www.igawa.blog/blog/2013/09/28/rspce/</guid><description>&lt;p>今更ながらrailsにrspeceをインストール手順を紹介しまーす。&lt;/p></description></item><item><title>railsの初歩 > コントローラ名の付け方</title><link>https://www.igawa.blog/blog/2013/09/28/rails/</link><pubDate>Sat, 28 Sep 2013 00:00:00 +0000</pubDate><guid>https://www.igawa.blog/blog/2013/09/28/rails/</guid><description>&lt;p>モデルに関連するコントローラと、モデルに関連しないコントローラで名前の付け方に違いがあるようなのでメモしまーす。&lt;/p></description></item><item><title>chromeの拡張機能の実装方法</title><link>https://www.igawa.blog/blog/2013/09/24/chrome-plugin/</link><pubDate>Tue, 24 Sep 2013 00:00:00 +0000</pubDate><guid>https://www.igawa.blog/blog/2013/09/24/chrome-plugin/</guid><description>&lt;p>chromeの拡張機能が意外に簡単に実装できるので、ご紹介したいと思います。&lt;/p>
&lt;p>ざっくり説明するとhtmlで実装できます。&lt;/p></description></item><item><title>別ウィンドウでa要素を起動する方法</title><link>https://www.igawa.blog/blog/2013/09/17/link/</link><pubDate>Tue, 17 Sep 2013 00:00:00 +0000</pubDate><guid>https://www.igawa.blog/blog/2013/09/17/link/</guid><description>&lt;p>&lt;code>aタグ&lt;/code>をクリックした時に、現在の画面は残したまま、別ウィンドウを開く方法をご紹介します。&lt;/p></description></item><item><title>PALRO プログラミングコンテスト２</title><link>https://www.igawa.blog/blog/2013/09/16/palro2/</link><pubDate>Mon, 16 Sep 2013 00:00:00 +0000</pubDate><guid>https://www.igawa.blog/blog/2013/09/16/palro2/</guid><description>PALROを貸し出してもらえるか確認したところOKでした。
貸出期間は、10/20～11/20の1ヶ月間
また、PALROが届いたら動画などを載せたいと思います。
お楽しみに～!!</description></item><item><title>railsで軽量マークアップを実装する。</title><link>https://www.igawa.blog/blog/2013/09/16/markup/</link><pubDate>Mon, 16 Sep 2013 00:00:00 +0000</pubDate><guid>https://www.igawa.blog/blog/2013/09/16/markup/</guid><description>&lt;p>railsで軽量マークアップを実装した時のメモを残します。&lt;/p>
&lt;p>次の２つについて解説します。&lt;/p>
&lt;ul>
&lt;li>&lt;strong>textile&lt;/strong>(テキスタイル)&lt;/li>
&lt;li>&lt;strong>markdown&lt;/strong>&lt;/li>
&lt;/ul></description></item><item><title>2013 プログラミングコンテスト</title><link>https://www.igawa.blog/blog/2013/09/10/programming-contest/</link><pubDate>Tue, 10 Sep 2013 00:00:00 +0000</pubDate><guid>https://www.igawa.blog/blog/2013/09/10/programming-contest/</guid><description>&lt;p>9月に入りました。&lt;/p>
&lt;p>今年も数ヶ月で終わりですね♪&lt;/p>
&lt;p>ということで、今年まだ参加が可能なプログラミングコンテストを調べて一覧にしました。&lt;/p>
&lt;p>なんと、賞金が200万円のコンテストもあるんですね。&lt;/p></description></item><item><title>PALRO プログラミングコンテスト</title><link>https://www.igawa.blog/blog/2013/09/10/palro/</link><pubDate>Tue, 10 Sep 2013 00:00:00 +0000</pubDate><guid>https://www.igawa.blog/blog/2013/09/10/palro/</guid><description>&lt;p>&lt;a href="http://palro.jp/">PALRO&lt;/a>ってご存知ですか？&lt;/p>
&lt;p>&lt;strong>抜群の会話力を持ったコミュニケーションロボット&lt;/strong>だそうです。&lt;/p>
&lt;p>価格は、29万8000円&lt;/p></description></item><item><title>windowsでgrepする</title><link>https://www.igawa.blog/blog/2013/08/19/windows-grep/</link><pubDate>Mon, 19 Aug 2013 00:00:00 +0000</pubDate><guid>https://www.igawa.blog/blog/2013/08/19/windows-grep/</guid><description>&lt;p>windowsでgrepしたい衝動に駆られてググってみると、以下のようなコマンドがありました。&lt;/p></description></item><item><title>ReentrantReadWriteLock</title><link>https://www.igawa.blog/blog/2013/08/13/reentrantreadwritelock/</link><pubDate>Tue, 13 Aug 2013 00:00:00 +0000</pubDate><guid>https://www.igawa.blog/blog/2013/08/13/reentrantreadwritelock/</guid><description>&lt;p>javaで&lt;code>synchronized&lt;/code>よりロックの競合を少なくさせる方法&lt;/p></description></item><item><title>HashMapを順読込みした時の速度が気になった</title><link>https://www.igawa.blog/blog/2013/08/03/map-speed/</link><pubDate>Sat, 03 Aug 2013 00:00:00 +0000</pubDate><guid>https://www.igawa.blog/blog/2013/08/03/map-speed/</guid><description>&lt;p>JavaでHashMapのキー（文字列）を先頭一致で比較しながら、順次読み込んで行くとどのくらい時間がかかるのか気になったので試してみました。&lt;/p>
&lt;p>とりあえず、5000件のデータで検証します。&lt;/p>
&lt;p>検証したソースコードと実行結果を下記に載せます。&lt;/p></description></item><item><title>JavaのMapを順次読み込む方法</title><link>https://www.igawa.blog/blog/2013/08/03/map-for/</link><pubDate>Sat, 03 Aug 2013 00:00:00 +0000</pubDate><guid>https://www.igawa.blog/blog/2013/08/03/map-for/</guid><description>&lt;p>JavaでMapで順次読み込む方法をよく忘れるのでまとめます。&lt;/p></description></item><item><title>アトミック変数</title><link>https://www.igawa.blog/blog/2013/08/03/atomic/</link><pubDate>Sat, 03 Aug 2013 00:00:00 +0000</pubDate><guid>https://www.igawa.blog/blog/2013/08/03/atomic/</guid><description>&lt;h1 id="アトミック変数とは">アトミック変数とは？&lt;/h1>
&lt;p>java6から追加されたクラスです。&lt;/p>
&lt;p>変数の読込みと書込みの一連の処理を保証しており、複数スレッドからのアクセスに高いスループットを達成できます。&lt;/p></description></item><item><title>並行コレクション</title><link>https://www.igawa.blog/blog/2013/08/03/concurrenthashmap/</link><pubDate>Sat, 03 Aug 2013 00:00:00 +0000</pubDate><guid>https://www.igawa.blog/blog/2013/08/03/concurrenthashmap/</guid><description>&lt;p>従来の同期化コレクションは、パフォーマンスが劣化する可能性がありましたが、並行コレクションは複数スレッドから並列アクセスを前提に高いスループットを実現できます。&lt;/p></description></item><item><title>EclipseからGistに登録する方法</title><link>https://www.igawa.blog/blog/2013/08/01/gist-eclipse-plugin/</link><pubDate>Thu, 01 Aug 2013 00:00:00 +0000</pubDate><guid>https://www.igawa.blog/blog/2013/08/01/gist-eclipse-plugin/</guid><description>&lt;p>EclipseからGistに登録できるプラグインがあったら便利ですよね。&lt;/p></description></item><item><title>java5 スレッドプール</title><link>https://www.igawa.blog/blog/2013/07/30/java5-threadpool/</link><pubDate>Tue, 30 Jul 2013 00:00:00 +0000</pubDate><guid>https://www.igawa.blog/blog/2013/07/30/java5-threadpool/</guid><description>&lt;p>java5からスレッドプールというユーティリティーが追加されました。&lt;/p>
&lt;p>今まで自分で実装していた処理なども、既にjavaが用意してくれているので使わない手はないですよね？&lt;/p>
&lt;p>ということで、スレッドプールについてまとめています。&lt;/p></description></item><item><title>octopressで特定の記事をgenerateから除外する</title><link>https://www.igawa.blog/blog/2013/07/28/octopress-draft/</link><pubDate>Sun, 28 Jul 2013 00:00:00 +0000</pubDate><guid>https://www.igawa.blog/blog/2013/07/28/octopress-draft/</guid><description>&lt;p>複数記事を書いていて、１つは途中だけど、もう１つは完成して公開したい時ってありますよね。&lt;/p>
&lt;p>そんなときは、途中の記事のヘッダ部分に以下を追加してください。&lt;/p></description></item><item><title>コマンド一発でGistへソースを登録する方法</title><link>https://www.igawa.blog/blog/2013/07/28/gist/</link><pubDate>Sun, 28 Jul 2013 00:00:00 +0000</pubDate><guid>https://www.igawa.blog/blog/2013/07/28/gist/</guid><description>&lt;p>今までGitHubのサイトを開いてGistに登録していました。&lt;/p>
&lt;p>調べてみるとコマンド一発で、ローカルのソースをGistに登録する方法がありました。&lt;/p></description></item><item><title>eclipse 4.3 + ubuntu + 日本語</title><link>https://www.igawa.blog/blog/2013/07/27/eclipse-4-dot-3/</link><pubDate>Sat, 27 Jul 2013 00:00:00 +0000</pubDate><guid>https://www.igawa.blog/blog/2013/07/27/eclipse-4-dot-3/</guid><description>&lt;p>2013年6月27日にeclipse 4.3が公開になりました。&lt;/p>
&lt;p>毎年6月に新バージョンがリリースされているんですね。&lt;/p>
&lt;p>インストール手順及び、日本語化を行います。&lt;/p></description></item><item><title>並行処理ユーティリティー</title><link>https://www.igawa.blog/blog/2013/07/23/concurrent-utilies/</link><pubDate>Tue, 23 Jul 2013 00:00:00 +0000</pubDate><guid>https://www.igawa.blog/blog/2013/07/23/concurrent-utilies/</guid><description>&lt;p>Java5から追加された並行処理ユーティリティー(Concurrent Utilities)が、結構使えそうなので概要をまとめます。&lt;/p></description></item><item><title>java7 ダイヤモンド演算子</title><link>https://www.igawa.blog/blog/2013/07/20/java7-diamond/</link><pubDate>Sat, 20 Jul 2013 00:00:00 +0000</pubDate><guid>https://www.igawa.blog/blog/2013/07/20/java7-diamond/</guid><description>&lt;p>これは楽ちん、ジェネリクスの記載がjava7から簡単になります。&lt;/p></description></item><item><title>java7 マルチキャッチ</title><link>https://www.igawa.blog/blog/2013/07/20/java7-multi-catch/</link><pubDate>Sat, 20 Jul 2013 00:00:00 +0000</pubDate><guid>https://www.igawa.blog/blog/2013/07/20/java7-multi-catch/</guid><description>&lt;p>java7から複数の例外を１つのcatchブロックでキャッチできるようになりました。&lt;/p>
&lt;p>これがマルチキャッチ!!&lt;/p></description></item><item><title>JDBC4.0 ラージオブジェクト</title><link>https://www.igawa.blog/blog/2013/07/20/java7-jdbc4-dot-0/</link><pubDate>Sat, 20 Jul 2013 00:00:00 +0000</pubDate><guid>https://www.igawa.blog/blog/2013/07/20/java7-jdbc4-dot-0/</guid><description>&lt;p>JDBC3.0ではBLOBとCLOBをサポートしていましたが、JDBC4.0ではNCLOBもサポートするようになりました。&lt;/p></description></item><item><title>JDBCドライバーの自動ロード</title><link>https://www.igawa.blog/blog/2013/07/20/java7-jdbc/</link><pubDate>Sat, 20 Jul 2013 00:00:00 +0000</pubDate><guid>https://www.igawa.blog/blog/2013/07/20/java7-jdbc/</guid><description>&lt;p>JDBC 4.0からJDBCドライバを自動ロードする機能が追加されました。&lt;/p>
&lt;p>そのためJDBCドライバのロード処理を明示的に記載する必要がなくなりました。&lt;/p></description></item><item><title>octopressでbootstrapのデザインを適用した後にスタイルをカスタマイズする</title><link>https://www.igawa.blog/blog/2013/07/20/bootstrap/</link><pubDate>Sat, 20 Jul 2013 00:00:00 +0000</pubDate><guid>https://www.igawa.blog/blog/2013/07/20/bootstrap/</guid><description>&lt;p>octopressでbootstrapのデザインを適用したが、記事のタイトルと本文の間に、広いマージンがあり、狭めるためにスタイルシートをカスタマイズしました。&lt;/p>
&lt;p>その時の作業を記録します。&lt;/p></description></item><item><title>デザインパターンの種類</title><link>https://www.igawa.blog/blog/2013/07/20/designpattern/</link><pubDate>Sat, 20 Jul 2013 00:00:00 +0000</pubDate><guid>https://www.igawa.blog/blog/2013/07/20/designpattern/</guid><description>&lt;p>デザインパターンのお話&lt;/p>
&lt;p>GoF以外にもデザインパターンは、色々あるんですね。&lt;/p></description></item><item><title>代表的なSQL規格</title><link>https://www.igawa.blog/blog/2013/07/20/sql/</link><pubDate>Sat, 20 Jul 2013 00:00:00 +0000</pubDate><guid>https://www.igawa.blog/blog/2013/07/20/sql/</guid><description>&lt;p>SQLにも色々規格があり、最新版ではマルチメディア対応しているんですね。&lt;/p></description></item><item><title>java7 try-with-resources文</title><link>https://www.igawa.blog/blog/2013/07/18/java7-try-with-resources/</link><pubDate>Thu, 18 Jul 2013 00:00:00 +0000</pubDate><guid>https://www.igawa.blog/blog/2013/07/18/java7-try-with-resources/</guid><description>&lt;p>Java7から、クローズ処理を明示的に呼び出さなくても、自動で呼び出させるようになりました。&lt;/p>
&lt;p>これからはクローズ漏れの心配はないですね。&lt;/p></description></item><item><title>java7 アンダースコアを使った数値表記</title><link>https://www.igawa.blog/blog/2013/07/18/java7-underscore/</link><pubDate>Thu, 18 Jul 2013 00:00:00 +0000</pubDate><guid>https://www.igawa.blog/blog/2013/07/18/java7-underscore/</guid><description>&lt;p>Java7から数値リテラルで、アンダースコアの表記が使えるよになりました。&lt;/p>
&lt;p>カンマの代わりに使えば見やすくなりますね。&lt;/p></description></item><item><title>java7 ２進数のリテラル表記</title><link>https://www.igawa.blog/blog/2013/07/18/java7-0b/</link><pubDate>Thu, 18 Jul 2013 00:00:00 +0000</pubDate><guid>https://www.igawa.blog/blog/2013/07/18/java7-0b/</guid><description>&lt;p>Java7から、２進数のリテラル表記ができるようになりました。&lt;/p></description></item><item><title>Java7 switch文</title><link>https://www.igawa.blog/blog/2013/07/17/java7-switch/</link><pubDate>Wed, 17 Jul 2013 00:00:00 +0000</pubDate><guid>https://www.igawa.blog/blog/2013/07/17/java7-switch/</guid><description>&lt;p>&lt;a href="http://education.oracle.com/pls/web_prod-plq-dad/db_pages.getpage?page_id=516&amp;amp;p_org_id=70&amp;amp;lang=JA">1Z0-805 Upgrade to Java SE7&lt;/a>を受験するために、しばらくの間JavaSE7のネタをチョクチョク書き込んで行きまーす。&lt;/p></description></item><item><title>Ruby 配列式の%記法</title><link>https://www.igawa.blog/blog/2013/07/13/ruby-percent-w/</link><pubDate>Sat, 13 Jul 2013 00:00:00 +0000</pubDate><guid>https://www.igawa.blog/blog/2013/07/13/ruby-percent-w/</guid><description>&lt;p>Rubyの%記法について、忘れやすいのでまとめてます。&lt;/p></description></item><item><title>ディレクトリへのシンボリックリンクを作成する方法</title><link>https://www.igawa.blog/blog/2013/07/13/ln-s/</link><pubDate>Sat, 13 Jul 2013 00:00:00 +0000</pubDate><guid>https://www.igawa.blog/blog/2013/07/13/ln-s/</guid><description>&lt;p>ファイルへのシンボリックリンクを作成する際に迷った事はなかったのに、ディレクトリへのシンボリックリンクの作成で迷ったので記録します。&lt;/p></description></item><item><title>24コンテストメモ</title><link>https://www.igawa.blog/blog/2013/06/15/24contest-4/</link><pubDate>Sat, 15 Jun 2013 00:00:00 +0000</pubDate><guid>https://www.igawa.blog/blog/2013/06/15/24contest-4/</guid><description>&lt;p>24時間コンテストに参加した時の作業メモを残します。&lt;/p></description></item><item><title>rails関連コマンドの実行速度を数倍速くする方法</title><link>https://www.igawa.blog/blog/2013/06/08/zeus/</link><pubDate>Sat, 08 Jun 2013 00:00:00 +0000</pubDate><guid>https://www.igawa.blog/blog/2013/06/08/zeus/</guid><description>&lt;p>自分のノートパソコンは、SSDではないのでどうしても、railsのコマンドやRspecの実行が遅い orz&lt;/p>
&lt;p>数行のRspecの実行に、３～４秒くらいかかる。これではよい開発のリズムに乗れない。&lt;/p>
&lt;p>Rspecの実行を速くする方法がないか、探したところあった。&lt;/p>
&lt;p>それがこれ！！&lt;/p></description></item><item><title>UbuntuのSublimeText2で日本語を直接入力する</title><link>https://www.igawa.blog/blog/2013/06/07/sublimeibus/</link><pubDate>Fri, 07 Jun 2013 00:00:00 +0000</pubDate><guid>https://www.igawa.blog/blog/2013/06/07/sublimeibus/</guid><description>&lt;p>今まで「InputHelper」を導入して、&lt;code>ctrl + shift + z&lt;/code>でWindowを起動して日本語を入力していたので手間だった。
そんな時、&lt;a href="https://github.com/chikatoike/SublimeIBus">SublimeIBus&lt;/a>と運命の出会い。これはSublime Text2で直接日本語を入力できる優れも！！&lt;/p></description></item><item><title>SublimeText2から直接RSpecを実行する方法</title><link>https://www.igawa.blog/blog/2013/06/06/rspec/</link><pubDate>Thu, 06 Jun 2013 00:00:00 +0000</pubDate><guid>https://www.igawa.blog/blog/2013/06/06/rspec/</guid><description>&lt;p>はい、これ!!&lt;/p>
&lt;p>[&amp;ldquo;Sublime Text 2 Ruby Tests&amp;rdquo;](&lt;a href="http://kazshu.hatenablog.com/entry/20120611/1339422855#Sublime">http://kazshu.hatenablog.com/entry/20120611/1339422855#Sublime&lt;/a> Text 2 Ruby Tests のインストール)&lt;/p>
&lt;p>上記のサイトの通りインストールすればでけた！！&lt;/p></description></item><item><title>Gitですべて修正前にリセットしたい。</title><link>https://www.igawa.blog/blog/2013/05/31/git-reset/</link><pubDate>Fri, 31 May 2013 00:00:00 +0000</pubDate><guid>https://www.igawa.blog/blog/2013/05/31/git-reset/</guid><description>&lt;p>HEADの状態にリセットしたい。&lt;/p></description></item><item><title>Gitでインデックスから削除する方法</title><link>https://www.igawa.blog/blog/2013/05/31/git-rm/</link><pubDate>Fri, 31 May 2013 00:00:00 +0000</pubDate><guid>https://www.igawa.blog/blog/2013/05/31/git-rm/</guid><description> git rm --cached ファイル名</description></item><item><title>Gitで特定の文字列を含むファイルを検索する</title><link>https://www.igawa.blog/blog/2013/05/31/git-grep/</link><pubDate>Fri, 31 May 2013 00:00:00 +0000</pubDate><guid>https://www.igawa.blog/blog/2013/05/31/git-grep/</guid><description>git grepコマンドは、インデックスやワーキングツリーに対して文字列を検索する。
git grep &amp;ndash;no-index Saitama
kantou.txt:Saitama
正規表現で検索する。
#Kaで始まる行を検索する git grep -e ^Ka</description></item><item><title>Gitで空フォルダを登録する</title><link>https://www.igawa.blog/blog/2013/05/31/git-empty/</link><pubDate>Fri, 31 May 2013 00:00:00 +0000</pubDate><guid>https://www.igawa.blog/blog/2013/05/31/git-empty/</guid><description>空ディレクトリに以下のファイル名でファイルを作る。
.gitkeep</description></item><item><title>Gitで作成者毎にコミットログの統計を表示する</title><link>https://www.igawa.blog/blog/2013/05/30/git_shortlog/</link><pubDate>Thu, 30 May 2013 00:00:00 +0000</pubDate><guid>https://www.igawa.blog/blog/2013/05/30/git_shortlog/</guid><description>&lt;p>誰が一番コミットしているのとかを調べる時に重宝しそう！！&lt;/p></description></item><item><title>Gitのインストール及び、初期設定</title><link>https://www.igawa.blog/blog/2013/05/30/git_install/</link><pubDate>Thu, 30 May 2013 00:00:00 +0000</pubDate><guid>https://www.igawa.blog/blog/2013/05/30/git_install/</guid><description>&lt;p>Gitのインストール及び、初期設定についてまとめています。&lt;/p></description></item><item><title>Gitのトピックブランチ開発について</title><link>https://www.igawa.blog/blog/2013/05/30/git_topic_branch/</link><pubDate>Thu, 30 May 2013 00:00:00 +0000</pubDate><guid>https://www.igawa.blog/blog/2013/05/30/git_topic_branch/</guid><description>&lt;p>トピックブランチとは、簡単に説明すると、機能追加やバグ修正の単位でブランチを作って開発すること。&lt;/p>
&lt;p>具体的には、以下のような手順で行う。&lt;/p></description></item><item><title>Gitの現在の状態を確認する</title><link>https://www.igawa.blog/blog/2013/05/30/git_status/</link><pubDate>Thu, 30 May 2013 00:00:00 +0000</pubDate><guid>https://www.igawa.blog/blog/2013/05/30/git_status/</guid><description>&lt;p>次のコマンドで、次回のコミットに向けた状態とファイルの状態の２つを出力する。&lt;/p>
&lt;p>git status&lt;/p></description></item><item><title>railsで各RDBMSの文字列連結に対応させる</title><link>https://www.igawa.blog/blog/2013/05/27/activerecord/</link><pubDate>Mon, 27 May 2013 00:00:00 +0000</pubDate><guid>https://www.igawa.blog/blog/2013/05/27/activerecord/</guid><description>&lt;h1 id="問題点">問題点&lt;/h1>
&lt;p>sqliteでは問題なく動作するのに、mysqlで実行すると検索結果が０件になる。&lt;/p>
&lt;p>問題のSQL&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-sql" data-lang="sql">&lt;span style="color:#66d9ef">SELECT&lt;/span> &lt;span style="color:#e6db74">&amp;#34;users&amp;#34;&lt;/span>.&lt;span style="color:#f92672">*&lt;/span>
&lt;span style="color:#66d9ef">FROM&lt;/span> &lt;span style="color:#e6db74">&amp;#34;users&amp;#34;&lt;/span>
&lt;span style="color:#66d9ef">INNER&lt;/span> &lt;span style="color:#66d9ef">JOIN&lt;/span> &lt;span style="color:#e6db74">&amp;#34;profiles&amp;#34;&lt;/span>
&lt;span style="color:#66d9ef">ON&lt;/span> (&lt;span style="color:#e6db74">&amp;#34;profiles&amp;#34;&lt;/span>.&lt;span style="color:#e6db74">&amp;#34;user_id&amp;#34;&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;users&amp;#34;&lt;/span>.&lt;span style="color:#e6db74">&amp;#34;id&amp;#34;&lt;/span>)
&lt;span style="color:#66d9ef">WHERE&lt;/span> (last_name &lt;span style="color:#f92672">||&lt;/span> first_name &lt;span style="color:#66d9ef">LIKE&lt;/span> &lt;span style="color:#e6db74">&amp;#39;%井川%&amp;#39;&lt;/span>)
&lt;span style="color:#66d9ef">ORDER&lt;/span> &lt;span style="color:#66d9ef">BY&lt;/span> created_at &lt;span style="color:#66d9ef">desc&lt;/span>
&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Sublime Text2でRubyソースをフォーマットしたい</title><link>https://www.igawa.blog/blog/2013/05/25/beautifyruby/</link><pubDate>Sat, 25 May 2013 00:00:00 +0000</pubDate><guid>https://www.igawa.blog/blog/2013/05/25/beautifyruby/</guid><description>&lt;p>Sublime Text2でrubyのソースのフォーマットしたいですよね&lt;/p></description></item><item><title>JavaScriptでクラスを定義する</title><link>https://www.igawa.blog/blog/2013/05/23/javascript/</link><pubDate>Thu, 23 May 2013 00:00:00 +0000</pubDate><guid>https://www.igawa.blog/blog/2013/05/23/javascript/</guid><description>&lt;p>JavaScriptでこのように定義することで、グローバル領域を汚すことなくすっきり定義できます。&lt;/p></description></item><item><title>特定の環境を除いてgemをインストールしたい</title><link>https://www.igawa.blog/blog/2013/05/23/rails/</link><pubDate>Thu, 23 May 2013 00:00:00 +0000</pubDate><guid>https://www.igawa.blog/blog/2013/05/23/rails/</guid><description>&lt;p>毎回忘れるので、とりあえずメモしまーす。&lt;/p>
&lt;p>Gemfileを次のように記述する。&lt;/p></description></item><item><title>warタスクでMETA-INFフォルダに特定のファイルを含める方法</title><link>https://www.igawa.blog/blog/2013/05/22/java2/</link><pubDate>Wed, 22 May 2013 00:00:00 +0000</pubDate><guid>https://www.igawa.blog/blog/2013/05/22/java2/</guid><description>warファイルを生成する際にMETA-INFフォルダに特定のファイルを含めたくて探していたら、次のサイトにやり方で実装できました。ありがたや、ありがたや
参考サイト</description></item><item><title>windowsのファイル共有からファイルを読み込む方法</title><link>https://www.igawa.blog/blog/2013/05/22/java/</link><pubDate>Wed, 22 May 2013 00:00:00 +0000</pubDate><guid>https://www.igawa.blog/blog/2013/05/22/java/</guid><description>&lt;p>&lt;a href="http://jcifs.samba.org/">JCIFS&lt;/a>を使って実現します。&lt;/p>
&lt;h1 id="jcifsとは">JCIFSとは？&lt;/h1>
&lt;ul>
&lt;li>JCIFSはCIFS/SMBプロトコルを実装したオープンソースのJavaライブラリです。&lt;/li>
&lt;li>CIFSはMicrosoftのWindowsプラットフォーム上のファイル共有プロトコルです。&lt;/li>
&lt;li>JCIFSを使用するとJavaアプリケーションからWindows共有ネットワークにアクセスできます。&lt;/li>
&lt;li>LGPLで公開されています。&lt;/li>
&lt;/ul></description></item><item><title>Facebook的なユーザ検索を実装したの時のメモ</title><link>https://www.igawa.blog/blog/2013/05/20/luida01/</link><pubDate>Mon, 20 May 2013 00:00:00 +0000</pubDate><guid>https://www.igawa.blog/blog/2013/05/20/luida01/</guid><description>&lt;h1 id="実装イメージ">実装イメージ&lt;/h1>
&lt;p>こんな感じの検索を実装したい。とりあえずはユーザ検索を実現する。&lt;/p>
&lt;p>&lt;img src="images/Facebook%E3%81%8B%E3%82%89%E3%81%AE%E6%A4%9C%E7%B4%A2.png" alt="実装イメージ">&lt;/p></description></item><item><title>PostgreSQL 組込み関数と演算子</title><link>https://www.igawa.blog/blog/2013/05/13/postgresql-08/</link><pubDate>Mon, 13 May 2013 00:00:00 +0000</pubDate><guid>https://www.igawa.blog/blog/2013/05/13/postgresql-08/</guid><description>日付を取得するにもいろいろな関数がある、トランザクション開始の時刻を取得するものなど用途によって使い分ける必要がありそうだ。
トランザクション開始時の日時を取得する関数 関数名 説明 now() タイムスタンプを取得する current_timestamp タイムスタンプを取得する localtimestamp タイムスタンプを取得する localtime 時刻を取得する current_time 時刻を取得する current_date 日付を取得する SQL開始時の日付/時刻を取得する関数 この関数は、１つのSQL内で複数回実行しても、同じ日時を取得する。
関数名 説明 statement_timestamp() タイムスタンプを取得する 関数実行時の日時/時刻を取得する関数 関数名 説明 clock_timestamp() タイムスタンプを取得する 文字列のマッチングを行う演算子 使い方 説明 select &amp;lsquo;abc&amp;rsquo; ~ &amp;lsquo;^a&amp;rsquo; =&amp;gt; true 正規表現に一致する場合は真となる。大文字/小文字を区別する select &amp;lsquo;abc&amp;rsquo; ~* &amp;lsquo;^A&amp;rsquo; =&amp;gt; true 正規表現に一致する場合は真となる。大文字/小文字を区別しない select &amp;lsquo;abc&amp;rsquo; !</description></item><item><title>PostgreSQL 基本的な運用管理</title><link>https://www.igawa.blog/blog/2013/05/11/postgresql-07/</link><pubDate>Sat, 11 May 2013 00:00:00 +0000</pubDate><guid>https://www.igawa.blog/blog/2013/05/11/postgresql-07/</guid><description>&lt;p>PostgreSQLの基本的な運用管理について整理してきます。&lt;/p></description></item><item><title>rubyMotion</title><link>https://www.igawa.blog/blog/2013/05/11/rubymotion/</link><pubDate>Sat, 11 May 2013 00:00:00 +0000</pubDate><guid>https://www.igawa.blog/blog/2013/05/11/rubymotion/</guid><description>&lt;p>&lt;a href="http://gihyo.jp/magazine/wdpress/archive/2013/vol74">Web+DB PRESS vol.74&lt;/a>でRubyMotionの記事があったので読んでみた。 Objective-Cはなんとなく馴染めなかったので、RubyでiOSアプリが作れるのは嬉しい&lt;/p></description></item><item><title>PostgreSQL バックアップとリストア</title><link>https://www.igawa.blog/blog/2013/05/10/postgresql-06/</link><pubDate>Fri, 10 May 2013 00:00:00 +0000</pubDate><guid>https://www.igawa.blog/blog/2013/05/10/postgresql-06/</guid><description>&lt;p>PostgreSQLのバックアップとリストについて整理しています。&lt;/p></description></item><item><title>PostgreSQL 設定ファイル</title><link>https://www.igawa.blog/blog/2013/05/08/postgresql-05/</link><pubDate>Wed, 08 May 2013 00:00:00 +0000</pubDate><guid>https://www.igawa.blog/blog/2013/05/08/postgresql-05/</guid><description>&lt;p>postgresql.confについて整理しています。&lt;/p></description></item><item><title>PostgreSQL コマンド</title><link>https://www.igawa.blog/blog/2013/05/06/postgresql-04/</link><pubDate>Mon, 06 May 2013 00:00:00 +0000</pubDate><guid>https://www.igawa.blog/blog/2013/05/06/postgresql-04/</guid><description>&lt;p>PostgreSQLでよく使いそうなコマンド&lt;/p></description></item><item><title>categories</title><link>https://www.igawa.blog/blog/2013/05/05/categories/</link><pubDate>Sun, 05 May 2013 00:00:00 +0000</pubDate><guid>https://www.igawa.blog/blog/2013/05/05/categories/</guid><description>&lt;p>カテゴリから記事を選択したくなったので、ググってみたら&amp;quot;いい感じ&amp;quot;のpluginを発見!!&lt;/p></description></item><item><title>vagrantインストール</title><link>https://www.igawa.blog/blog/2013/05/01/vagrant/</link><pubDate>Wed, 01 May 2013 00:00:00 +0000</pubDate><guid>https://www.igawa.blog/blog/2013/05/01/vagrant/</guid><description>&lt;p>chef soloの記事を読んでいたら、vagrantという面白いツールを見つけたので、とりあえずインストール&lt;/p></description></item><item><title>PostgreSQL インストール</title><link>https://www.igawa.blog/blog/2013/04/30/postgresql-02/</link><pubDate>Tue, 30 Apr 2013 00:00:00 +0000</pubDate><guid>https://www.igawa.blog/blog/2013/04/30/postgresql-02/</guid><description>&lt;p>PostgreSQLのインストールについて説明します。&lt;/p></description></item><item><title>postgreSQL特徴</title><link>https://www.igawa.blog/blog/2013/04/30/postgresql-01/</link><pubDate>Tue, 30 Apr 2013 00:00:00 +0000</pubDate><guid>https://www.igawa.blog/blog/2013/04/30/postgresql-01/</guid><description>&lt;h3 id="なぜpostgresqlなのか">なぜPostgreSQLなのか?&lt;/h3>
&lt;ul>
&lt;li>MySQLと違い商用でも無償で利用可能で、改変も自由にできる。&lt;/li>
&lt;li>自社製品にPostgreSQLを組み込んで販売してもOKということ！！&lt;/li>
&lt;li>しかも自社製品のソースを公開する必要がない!!&lt;/li>
&lt;/ul></description></item><item><title>メタプログラミング Ruby オブジェクトモデル</title><link>https://www.igawa.blog/blog/2013/04/26/metaprogramming_ruby_01/</link><pubDate>Fri, 26 Apr 2013 00:00:00 +0000</pubDate><guid>https://www.igawa.blog/blog/2013/04/26/metaprogramming_ruby_01/</guid><description>&lt;p>「メタプログラミング Ruby」を読み始めました。
そこで気づいた事を、適当にまとめていきまーす。&lt;/p></description></item><item><title/><link>https://www.igawa.blog/blog/1/01/01/string/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.igawa.blog/blog/1/01/01/string/</guid><description>&lt;p>&amp;ldquo;+++
title = &amp;ldquo;pythonの文字列、数値を知る&amp;rdquo;
tags = [&amp;ldquo;Python&amp;rdquo;]
date = &amp;ldquo;2016-06-25&amp;rdquo;
banner = &amp;ldquo;banners/python.png&amp;rdquo;
+++&lt;/p>
&lt;p>今回は文字列や数値の扱い方についてまとめています。&lt;/p></description></item></channel></rss>