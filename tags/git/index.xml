<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Git on For myself tomorrow</title><link>https://www.igawa.blog/tags/git/</link><description>Recent content in Git on For myself tomorrow</description><generator>Hugo -- gohugo.io</generator><language>ja</language><lastBuildDate>Thu, 20 Feb 2014 00:00:00 +0000</lastBuildDate><atom:link href="https://www.igawa.blog/tags/git/index.xml" rel="self" type="application/rss+xml"/><item><title>GitからGUIなマージツールを起動してソースを比較し編集したい(ubuntu)</title><link>https://www.igawa.blog/blog/2014/02/20/difftool-ubuntu/</link><pubDate>Thu, 20 Feb 2014 00:00:00 +0000</pubDate><guid>https://www.igawa.blog/blog/2014/02/20/difftool-ubuntu/</guid><description>&lt;p>windowsでは、WinMargeを使って比較する方法を紹介しました。&lt;br>
ubuntuでは、&lt;strong>meld&lt;/strong>というマージツールで実現する方法を紹介します。&lt;/p>
&lt;p>&lt;a href="https://www.igawa.blog/blog/2014/02/12/difftool/index.html">windowsでは、WinMargeを使って比較する方法&lt;/a>&lt;/p></description></item><item><title>GitからWinMergeを起動してソースを比較し編集したい</title><link>https://www.igawa.blog/blog/2014/02/12/difftool/</link><pubDate>Wed, 12 Feb 2014 00:00:00 +0000</pubDate><guid>https://www.igawa.blog/blog/2014/02/12/difftool/</guid><description>&lt;p>CUIでソースの差分を比較するのは、結構つらいのでGUIで比較及び、そのまま編集ができないか調べたところあったので紹介します。&lt;br>
&lt;code>window&lt;/code>での設定手順と実行結果を解説します。&lt;/p></description></item><item><title>Gitですべて修正前にリセットしたい。</title><link>https://www.igawa.blog/blog/2013/05/31/git-reset/</link><pubDate>Fri, 31 May 2013 00:00:00 +0000</pubDate><guid>https://www.igawa.blog/blog/2013/05/31/git-reset/</guid><description>&lt;p>HEADの状態にリセットしたい。&lt;/p></description></item><item><title>Gitでインデックスから削除する方法</title><link>https://www.igawa.blog/blog/2013/05/31/git-rm/</link><pubDate>Fri, 31 May 2013 00:00:00 +0000</pubDate><guid>https://www.igawa.blog/blog/2013/05/31/git-rm/</guid><description> git rm --cached ファイル名</description></item><item><title>Gitで特定の文字列を含むファイルを検索する</title><link>https://www.igawa.blog/blog/2013/05/31/git-grep/</link><pubDate>Fri, 31 May 2013 00:00:00 +0000</pubDate><guid>https://www.igawa.blog/blog/2013/05/31/git-grep/</guid><description>git grepコマンドは、インデックスやワーキングツリーに対して文字列を検索する。
git grep &amp;ndash;no-index Saitama
kantou.txt:Saitama
正規表現で検索する。
#Kaで始まる行を検索する git grep -e ^Ka</description></item><item><title>Gitで空フォルダを登録する</title><link>https://www.igawa.blog/blog/2013/05/31/git-empty/</link><pubDate>Fri, 31 May 2013 00:00:00 +0000</pubDate><guid>https://www.igawa.blog/blog/2013/05/31/git-empty/</guid><description>空ディレクトリに以下のファイル名でファイルを作る。
.gitkeep</description></item><item><title>Gitで作成者毎にコミットログの統計を表示する</title><link>https://www.igawa.blog/blog/2013/05/30/git_shortlog/</link><pubDate>Thu, 30 May 2013 00:00:00 +0000</pubDate><guid>https://www.igawa.blog/blog/2013/05/30/git_shortlog/</guid><description>&lt;p>誰が一番コミットしているのとかを調べる時に重宝しそう！！&lt;/p></description></item><item><title>Gitのインストール及び、初期設定</title><link>https://www.igawa.blog/blog/2013/05/30/git_install/</link><pubDate>Thu, 30 May 2013 00:00:00 +0000</pubDate><guid>https://www.igawa.blog/blog/2013/05/30/git_install/</guid><description>&lt;p>Gitのインストール及び、初期設定についてまとめています。&lt;/p></description></item><item><title>Gitのトピックブランチ開発について</title><link>https://www.igawa.blog/blog/2013/05/30/git_topic_branch/</link><pubDate>Thu, 30 May 2013 00:00:00 +0000</pubDate><guid>https://www.igawa.blog/blog/2013/05/30/git_topic_branch/</guid><description>&lt;p>トピックブランチとは、簡単に説明すると、機能追加やバグ修正の単位でブランチを作って開発すること。&lt;/p>
&lt;p>具体的には、以下のような手順で行う。&lt;/p></description></item><item><title>Gitの現在の状態を確認する</title><link>https://www.igawa.blog/blog/2013/05/30/git_status/</link><pubDate>Thu, 30 May 2013 00:00:00 +0000</pubDate><guid>https://www.igawa.blog/blog/2013/05/30/git_status/</guid><description>&lt;p>次のコマンドで、次回のコミットに向けた状態とファイルの状態の２つを出力する。&lt;/p>
&lt;p>git status&lt;/p></description></item></channel></rss>